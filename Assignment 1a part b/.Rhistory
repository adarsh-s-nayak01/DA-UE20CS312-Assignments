library(tidyverse)
#install.packages("tidyverse")
library(tidyverse)
#get the current directory.
print(getwd())
#load the given dataset
df <- read_csv("top_1000_instagrammers.csv")
print(df)
summary(df)
audience_country <- data$Audience.Country
summary(audience_country)
auth_eng <- data$Authentic.Engagement
summary(auth_eng)
eng_avg <- data$Engagement.Avg.
summary(eng_avg)
library(ggplot2)
ggplot(data,aes(x=Audience.Country))+geom_bar()+coord_flip()+ggtitle("Frequency distribution of the countries")
# Get and print current working directory
print(getwd())
# Load CSV
data <- read.csv("top_1000_instagrammers.csv")
data <- read.csv('top_1000_instagrammers.csv', header=TRUE)
print(data)
str(data)
data=data[!(is.na(data$Name) | data$Name==""),]
data=data[!(is.na(data$Rank) | data$Rank==""),]
data=data[!(is.na(data$Followers) | data$Followers==""),]
data=data[!(is.na(data$Category) | data$Category==""),]
data=data[!(is.na(data$Audience.Country) | data$Audience.Country==""),]
data=data[!(is.na(data$Authentic.Engagement) | data$Authentic.Engagement==""),]
data=data[!(is.na(data$Engagement.Avg.) | data$Engagement.Avg.==""),]
print(data)
summary(data$Audience.Country)
getmode<-function(v){
uniqv=unique(v)
uniqv[which.max(tabulate(match(v,uniqv)))]
}
getmode(data$Audience.Country) #Displays the Country of maximum occurence or the Country from where maximum artists/Influencers belong to
names=subset(data,Audience.Country=="United States")
cat("The artists/Influencers from the modal Country are in the table below:\n")
print(names)
n=nrow(names)
cat("The number of rows with mode Audience country is ",n)
unique_countries=unique(data$Audience.Country)
arr=c(unique_countries)
print(arr)
cat("Number of elemets in the array of unique elements is ",length(arr))
unique_countries=unique(data$Audience.Country)
arr=c(unique_countries)
print(arr)
cat("Number of elemets in the array of unique elements is ",length(arr))
summary((data$Authentic.Engagement))
sd(data$Authentic.Engagement)
subset(data,Authentic.Engagement==max(data$Authentic.Engagement))
subset(data,Authentic.Engagement==min(data$Authentic.Engagement))
summary((data$Engagement.Avg.))
sd(data$data$Engagement.Avg.)
subset(data,Engagement.Avg.==max(data$Engagement.Avg.))
subset(data,Engagement.Avg.==min(data$Engagement.Avg.))
mean_of_AuthEngage<-mean(data$Authentic.Engagement,na.rm=TRUE)
mean_of_AvgEngage<-mean(data$Engagement.Avg.,na.rm=TRUE)
x=(mean_of_AvgEngage-mean_of_AuthEngage)*100/mean_of_AvgEngage
cat("The engagement from the users on an average is ",x," more than that from the instagrammers they follow.")
freq_table_country=table(data$Audience.Country)#Create table with Countries and their occurence
sort_table=freq_table_country[order(freq_table_country,decreasing=TRUE)]#Sorting the distribution
print(sort_table[1:3])
cat("Percentage of the top 1000 instagrammers that have the top 1 audience country is ",sort_table[1]/sum(sort_table))
boxplot(data$Authentic.Engagement,xlab="Audience Engagement",main="Horizontal box plot for Authentic Engagement",horizontal=TRUE)
boxplot(data$Authentic.Engagement,xlab="Audience Engagement",main="Horizontal box plot for Authentic Engagement",horizontal=TRUE)
a<- df[["Authentic Engagement"]]
a <- ifelse(grepl('m', ignore.case = TRUE, a), as.numeric(gsub("[$M]", "", a)) * 10^6,as.numeric(gsub("[$K]", "", a)) * 10^3)
boxplot(a , xlab = "Authentic Engagement", border = "black",
ylab = "All top 1000 Instagrammers")
a<- data[["Authentic Engagement"]]
a <- ifelse(grepl('m', ignore.case = TRUE, a), as.numeric(gsub("[$M]", "", a)) * 10^6,as.numeric(gsub("[$K]", "", a)) * 10^3)
boxplot(a , xlab = "Authentic Engagement", border = "black",
ylab = "All top 1000 Instagrammers")
a<- data[["Authentic Engagement"]]
a <- ifelse(grepl('m', ignore.case = TRUE, a), as.numeric(gsub("[$M]", "", a)) * 10^6,as.numeric(gsub("[$K]", "", a)) * 10^3)
boxplot(a , xlab = "Authentic Engagement", border = "black", ylab = "All top 1000 Instagrammers")
a<- data[["Authentic Engagement"]]
a <- ifelse(grepl('m', ignore.case = TRUE, a), as.numeric(gsub("[$M]", "", a)) * 10^6,as.numeric(gsub("[$K]", "", a)) * 10^3)
boxplot(a , xlab = "Authentic Engagement", border = "black", ylab = "All top 1000 Instagrammers")
library(ggplot2)
library(dplyr)
ggplot(data[1:1000,], aes(x=Audience.Country, y=Followers)) + geom_col() + coord_flip()
m = aggregate(data$Followers,list(data$Audience.Country),FUN=max)
print(m)
t = m[order(-m$x),]
library(ggplot2)
followers <- data$Followers
ggplot(df, aes(x = audience_country, y = followers)) +geom_bar(stat="identity",FUN=max)
library(ggplot2)
followers <- data$Followers
ggplot(data, aes(x = audience_country, y = followers)) +geom_bar(stat="identity",FUN=max)
frequency_table_of_the_country=table(aud_ct)
#Create a frequency table with the countries and their occurences.
after_sorting=frequency_table_of_the_country[order(frequency_table_of_the_country,decreasing=TRUE)]
#Sorting the distribution in decreasing order
cat("The top 3 audience countries that follow most of the top 1000 instagrammers are ")
print(after_sorting[1:3])
#printing the top 3 countries
cat("Percentage of the top 1000 instagrammers that have the top 1 audience country is ",after_sorting[1]/sum(after_sorting))
# Get and print current working directory
print(getwd())
# Load CSV
library(tidyverse)
data <- read.csv("top_1000_instagrammers.csv")
data <- read.csv('top_1000_instagrammers.csv', header=TRUE)
df <- read_csv("top_1000_instagrammers.csv")
#print(data)
# Load CSV
library(tidyverse)
data <- read.csv("top_1000_instagrammers.csv")
data <- read.csv('top_1000_instagrammers.csv', header=TRUE)
df <- read_csv("top_1000_instagrammers.csv")
#print(data)
str(data)
data=data[!(is.na(data$Name) | data$Name==""),]
data=data[!(is.na(data$Rank) | data$Rank==""),]
data=data[!(is.na(data$Followers) | data$Followers==""),]
data=data[!(is.na(data$Category) | data$Category==""),]
data=data[!(is.na(data$Audience.Country) | data$Audience.Country==""),]
data=data[!(is.na(data$Authentic.Engagement) | data$Authentic.Engagement==""),]
data=data[!(is.na(data$Engagement.Avg.) | data$Engagement.Avg.==""),]
#print(data)
sapply(df,class)
a<- df[["Authentic Engagement"]]
a <- ifelse(grepl('m', ignore.case = TRUE, a), as.numeric(gsub("[$M]", "", a)) * 10^6,
as.numeric(gsub("[$K]", "", a)) * 10^3)
## MEAN
mean(a)
## MEDIAN
median(a)
## MODE
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
getmode(a)
## MINIMUM VALUE
min(a)
## MAXIMUM VALUE
max(a)
## 1ST QUARTILE
quantile(a, 0.25)
## 3RD QUARTILE
quantile(a, 0.75)
## STANDARD DEVIATION
sd(a)
#install.packages("tidyverse")
library(tidyverse)
#get the current directory.
print(getwd())
#load the given dataset
df <- read_csv("top_1000_instagrammers.csv")
print(df)
summary(df)
audience_country <- data$Audience.Country
summary(audience_country)
auth_eng <- data$Authentic.Engagement
summary(auth_eng)
eng_avg <- data$Engagement.Avg.
summary(eng_avg)
library(ggplot2)
ggplot(data,aes(x=Audience.Country))+geom_bar()+coord_flip()+ggtitle("Frequency distribution of the countries")
frequency_table_of_the_country=table(aud_ct)
#Create a frequency table with the countries and their occurences.
after_sorting=frequency_table_of_the_country[order(frequency_table_of_the_country,decreasing=TRUE)]
#Sorting the distribution in decreasing order
cat("The top 3 audience countries that follow most of the top 1000 instagrammers are ")
print(after_sorting[1:3])
#printing the top 3 countries
cat("Percentage of the top 1000 instagrammers that have the top 1 audience country is ",after_sorting[1]/sum(after_sorting))
a<- df[["Authentic Engagement"]]
a <- ifelse(grepl('m', ignore.case = TRUE, a), as.numeric(gsub("[$M]", "", a)) * 10^6,as.numeric(gsub("[$K]", "", a)) * 10^3)
boxplot(a , xlab = "Authentic Engagement", border = "black",
ylab = "All top 1000 Instagrammers")
library(ggplot2)
followers <- data$Followers
ggplot(data=df, aes(x = df$`Audience Country`, y = df$Followers)) +geom_bar(stat="identity",FUN=max)
#install.packages("tidyverse")
library(tidyverse)
#get the current directory.
print(getwd())
#load the given dataset
df <- read_csv("top_1000_instagrammers.csv")
print(df)
summary(df)
audience_country <- data$Audience.Country
summary(audience_country)
auth_eng <- data$Authentic.Engagement
summary(auth_eng)
eng_avg <- data$Engagement.Avg.
summary(eng_avg)
library(ggplot2)
ggplot(data,aes(x=Audience.Country))+geom_bar()+coord_flip()+ggtitle("Frequency distribution of the countries")
frequency_table_of_the_country=table(aud_ct)
#Create a frequency table with the countries and their occurences.
after_sorting=frequency_table_of_the_country[order(frequency_table_of_the_country,decreasing=TRUE)]
#Sorting the distribution in decreasing order
cat("The top 3 audience countries that follow most of the top 1000 instagrammers are ")
print(after_sorting[1:3])
#printing the top 3 countries
cat("Percentage of the top 1000 instagrammers that have the top 1 audience country is ",after_sorting[1]/sum(after_sorting))
a<- df[["Authentic Engagement"]]
a <- ifelse(grepl('m', ignore.case = TRUE, a), as.numeric(gsub("[$M]", "", a)) * 10^6,as.numeric(gsub("[$K]", "", a)) * 10^3)
boxplot(a , xlab = "Authentic Engagement", border = "black",
ylab = "All top 1000 Instagrammers")
library(ggplot2)
followers <- data$Followers
ggplot(data=df, aes(x = df$`Audience Country`, y = df$Followers)) +geom_bar(stat="identity",FUN=max)
#install.packages("tidyverse")
library(tidyverse)
#get the current directory.
print(getwd())
#load the given dataset
df <- read_csv("top_1000_instagrammers.csv")
print(df)
summary(df)
audience_country <- data$Audience.Country
summary(audience_country)
auth_eng <- data$Authentic.Engagement
summary(auth_eng)
eng_avg <- data$Engagement.Avg.
summary(eng_avg)
library(ggplot2)
ggplot(data,aes(x=Audience.Country))+geom_bar()+coord_flip()+ggtitle("Frequency distribution of the countries")
frequency_table_of_the_country=table(aud_ct)
#Create a frequency table with the countries and their occurences.
after_sorting=frequency_table_of_the_country[order(frequency_table_of_the_country,decreasing=TRUE)]
#Sorting the distribution in decreasing order
cat("The top 3 audience countries that follow most of the top 1000 instagrammers are ")
print(after_sorting[1:3])
#printing the top 3 countries
cat("Percentage of the top 1000 instagrammers that have the top 1 audience country is ",after_sorting[1]/sum(after_sorting))
a<- df[["Authentic Engagement"]]
a <- ifelse(grepl('m', ignore.case = TRUE, a), as.numeric(gsub("[$M]", "", a)) * 10^6,as.numeric(gsub("[$K]", "", a)) * 10^3)
boxplot(a , xlab = "Authentic Engagement", border = "black",
ylab = "All top 1000 Instagrammers")
library(ggplot2)
followers <- data$Followers
ggplot(data=df, aes(x = df$`Audience Country`, y = df$Followers)) +geom_bar(stat="identity",FUN=max)
library(ggplot2)
ggplot(data,aes(x=Audience.Country))+geom_bar()+coord_flip()+ggtitle("Frequency distribution of the countries")
library(tidyverse)
data<- read_csv("CharlesBookClubDataset.csv")
data1<-read_csv("CharlesBookClubDataset.csv")
summary(data1)
print(length(which(is.na(data1$M))))
print(length(which(is.na(data1$R))))
print(length(which(is.na(data1$F))))
data1$M <- ifelse(data1$M=="",NA,data1$M)
data1$R <- ifelse(data1$R=="",NA,data1$R)
data1$F <- ifelse(data1$F=="",NA,data1$F)
data1<-na.omit(data1)
summary(data1)
sd(data1$M)
sd(data1$R)
sd(data1$F)
hist(data$M)
data$M <- ifelse(data$M=="",NA,data$M)
data$R <- ifelse(data$R=="",NA,data$R)
data$F <- ifelse(data$F=="",NA,data$F)
data$M[is.na(data$M)]<- mean(data$M,na.rm =TRUE)
hist(data$M)
hist(data$R)
calcmode <-function(x)
{
distinct_values <- unique(x)
distinct_tab<-tabulate(match(x,distinct_values))
distinct_values[which.max(distinct_tab)]
}
data$R <- ifelse(is.na(data$R),calcmode((data$R)),data$R)
head(data)
hist(data$F)
data$F <- ifelse(is.na(data$F),calcmode((data$F)),data$F)
hist(data$F)
data$Mnewcol <- cut(data$M, breaks=5)
data$Fnewcol <- cut(data$F, breaks=5)
data$Rnewcol <- cut(data$R, breaks=5)
summary(data)
hist(as.numeric(data$Mnewcol))
hist(as.numeric(data$Rnewcol))
hist(as.numeric(data$Fnewcol))
hist(data$FirstPurch)
plot(density(data$M))
plot(density(data$R))
plot(density(data$F))
plot(density(data$FirstPurch))
library(ggpubr)
library(dplyr)
library(ggplot2)
library(ggpubr)
library(broom)
library(car)
data <- read.csv('Scenario 1.csv')
oneway<- aov(No.of.items ~ POI, data=data)
summary(oneway)
data <- read.csv('Scenario 2.csv')
twoway <- aov(No.of.items ~ POI + Priority, data=data)
summary(twoway)
plot(TukeyHSD(twoway,conf.level = 0.95))
plot(TukeyHSD(oneway,conf.level = 0.95))
summary(data)
library(tidyverse)
data<- read_csv("CharlesBookClubDataset.csv")
data1<-read_csv("CharlesBookClubDataset.csv")
summary(data1)
print(length(which(is.na(data1$M))))
print(length(which(is.na(data1$R))))
print(length(which(is.na(data1$F))))
data$Rnewcol <- cut(data$R, breaks=5)
data$Mnewcol <- cut(data$M, breaks=5)
data$Fnewcol <- cut(data$F, breaks=5)
summary(data)
hist(as.numeric(data$Fnewcol))
hist(as.numeric(data$Mnewcol))
hist(as.numeric(data$Rnewcol))
hist(data$FirstPurch)
summary(data1)
print(length(which(is.na(data1$M))))
print(length(which(is.na(data1$R))))
print(length(which(is.na(data1$F))))
data1$M <- ifelse(data1$M=="",NA,data1$M)
data1$R <- ifelse(data1$R=="",NA,data1$R)
data1$F <- ifelse(data1$F=="",NA,data1$F)
data1<-na.omit(data1)
summary(data1)
sd(data1$M)
sd(data1$R)
sd(data1$F)
library(tidyverse)
data<- read_csv("CharlesBookClubDataset.csv")
data1<-read_csv("CharlesBookClubDataset.csv")
summary(data1)
print(length(which(is.na(data1$M))))
print(length(which(is.na(data1$R))))
print(length(which(is.na(data1$F))))
data1$M <- ifelse(data1$M=="",NA,data1$M)
data1$R <- ifelse(data1$R=="",NA,data1$R)
data1$F <- ifelse(data1$F=="",NA,data1$F)
data1<-na.omit(data1)
summary(data1)
sd(data1$M)
sd(data1$R)
sd(data1$F)
hist(data$M)
data$M <- ifelse(data$M=="",NA,data$M)
data$R <- ifelse(data$R=="",NA,data$R)
data$F <- ifelse(data$F=="",NA,data$F)
data$M[is.na(data$M)]<- mean(data$M,na.rm =TRUE)
hist(data$M)
hist(data$R)
calcmode <-function(x)
{
distinct_values <- unique(x)
distinct_tab<-tabulate(match(x,distinct_values))
distinct_values[which.max(distinct_tab)]
}
data$R <- ifelse(is.na(data$R),calcmode((data$R)),data$R)
head(data)
hist(data$R)
hist(data$F)
data$F <- ifelse(is.na(data$F),calcmode((data$F)),data$F)
hist(data$F)
data$Rnewcol <- cut(data$R, breaks=5)
data$Mnewcol <- cut(data$M, breaks=5)
data$Fnewcol <- cut(data$F, breaks=5)
summary(data)
hist(as.numeric(data$Fnewcol))
hist(as.numeric(data$Mnewcol))
hist(as.numeric(data$Rnewcol))
hist(data$FirstPurch)
plot(density(data$M))
plot(density(data$R))
plot(density(data$F))
plot(density(data$FirstPurch))
library(ggpubr)
library(dplyr)
library(ggplot2)
library(ggpubr)
library(broom)
library(car)
data <- read.csv('Scenario 1.csv')
oneway<- aov(No.of.items ~ POI, data=data)
summary(oneway)
data <- read.csv('Scenario 2.csv')
twoway <- aov(No.of.items ~ POI + Priority, data=data)
summary(twoway)
plot(TukeyHSD(twoway,conf.level = 0.95))
plot(TukeyHSD(oneway,conf.level = 0.95))
library(tidyverse)
data<- read_csv("CharlesBookClubDataset.csv")
data1<-read_csv("CharlesBookClubDataset.csv")
summary(data1)
print(length(which(is.na(data1$M))))
print(length(which(is.na(data1$R))))
print(length(which(is.na(data1$F))))
data1$M <- ifelse(data1$M=="",NA,data1$M)
data1$R <- ifelse(data1$R=="",NA,data1$R)
data1$F <- ifelse(data1$F=="",NA,data1$F)
data1<-na.omit(data1)
summary(data1)
sd(data1$M)
sd(data1$R)
sd(data1$F)
hist(data$M)
data$M <- ifelse(data$M=="",NA,data$M)
data$R <- ifelse(data$R=="",NA,data$R)
data$F <- ifelse(data$F=="",NA,data$F)
data$M[is.na(data$M)]<- mean(data$M,na.rm =TRUE)
hist(data$M)
hist(data$R)
calcmode <-function(x)
{
distinct_values <- unique(x)
distinct_tab<-tabulate(match(x,distinct_values))
distinct_values[which.max(distinct_tab)]
}
data$R <- ifelse(is.na(data$R),calcmode((data$R)),data$R)
head(data)
hist(data$R)
hist(data$F)
data$F <- ifelse(is.na(data$F),calcmode((data$F)),data$F)
hist(data$F)
data$Rnewcol <- cut(data$R, breaks=5)
data$Mnewcol <- cut(data$M, breaks=5)
data$Fnewcol <- cut(data$F, breaks=5)
summary(data)
hist(as.numeric(data$Fnewcol))
hist(as.numeric(data$Mnewcol))
hist(as.numeric(data$Rnewcol))
hist(data$FirstPurch)
plot(density(data$M))
plot(density(data$R))
plot(density(data$F))
plot(density(data$FirstPurch))
library(ggpubr)
library(dplyr)
library(ggplot2)
library(ggpubr)
library(broom)
library(car)
data <- read.csv('Scenario 1.csv')
oneway<- aov(No.of.items ~ POI, data=data)
summary(oneway)
data <- read.csv('Scenario 2.csv')
twoway <- aov(No.of.items ~ POI + Priority, data=data)
summary(twoway)
plot(TukeyHSD(twoway,conf.level = 0.95))
plot(TukeyHSD(oneway,conf.level = 0.95))
library(tidyverse)
data<- read_csv("CharlesBookClubDataset.csv")
data1<-read_csv("CharlesBookClubDataset.csv")
summary(data1)
print(length(which(is.na(data1$M))))
print(length(which(is.na(data1$R))))
print(length(which(is.na(data1$F))))
data1$M <- ifelse(data1$M=="",NA,data1$M)
data1$R <- ifelse(data1$R=="",NA,data1$R)
data1$F <- ifelse(data1$F=="",NA,data1$F)
data1<-na.omit(data1)
summary(data1)
sd(data1$M)
sd(data1$R)
sd(data1$F)
hist(data$M)
data$M <- ifelse(data$M=="",NA,data$M)
data$R <- ifelse(data$R=="",NA,data$R)
data$F <- ifelse(data$F=="",NA,data$F)
data$M[is.na(data$M)]<- mean(data$M,na.rm =TRUE)
hist(data$M)
hist(data$R)
calcmode <-function(x)
{
distinct_values <- unique(x)
distinct_tab<-tabulate(match(x,distinct_values))
distinct_values[which.max(distinct_tab)]
}
data$R <- ifelse(is.na(data$R),calcmode((data$R)),data$R)
head(data)
hist(data$R)
hist(data$F)
data$F <- ifelse(is.na(data$F),calcmode((data$F)),data$F)
hist(data$F)
data$Rnewcol <- cut(data$R, breaks=5)
data$Mnewcol <- cut(data$M, breaks=5)
data$Fnewcol <- cut(data$F, breaks=5)
summary(data)
hist(as.numeric(data$Fnewcol))
hist(as.numeric(data$Mnewcol))
hist(as.numeric(data$Rnewcol))
hist(data$FirstPurch)
plot(density(data$M))
plot(density(data$R))
plot(density(data$F))
plot(density(data$FirstPurch))
library(ggpubr)
library(dplyr)
library(ggplot2)
library(ggpubr)
library(broom)
library(car)
data <- read.csv('Scenario 1.csv')
oneway<- aov(No.of.items ~ POI, data=data)
summary(oneway)
data <- read.csv('Scenario 2.csv')
twoway <- aov(No.of.items ~ POI + Priority, data=data)
summary(twoway)
plot(TukeyHSD(twoway,conf.level = 0.95))
plot(TukeyHSD(oneway,conf.level = 0.95))
